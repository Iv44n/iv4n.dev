---
import Link from './Link.astro'

interface Props {
    title: string;
    image: string;
    tags: string[];
    isOpenSource?: boolean;
    sourceCode?: string;
    projectLink?: string;
    year: number;
    buttonLabel: string[];
}

const {
    title,
    image,
    tags,
    isOpenSource,
    sourceCode,
    projectLink,
    year,
    buttonLabel
} = Astro.props
---

<article>
    <div class='card'>
        <div class='project-year'>{year}</div>
        <div>
            <div class='title'>
                <h2>{title}</h2>
                {
                    isOpenSource && (
                        <Link
                            href={sourceCode || ''}
                            target={'_blank'}
                            rel={'noopener noreferrer'}
                            class={'open-source'}
                        >
                            {buttonLabel[0]}
                        </Link>
                    )
                }
            </div>

            <slot name='subtitle' />
            <slot name='description' />

            <div class='tags'>
                {tags.map((tag) => <img src={tag} alt={tag} />)}
            </div>

            <div class='buttons'>
                {
                    projectLink && (
                        <Link
                            href={projectLink}
                            target={'_blank'}
                            rel={'noopener noreferrer'}
                            button
                            color='blue'
                        >
                            {buttonLabel[1]}
                            <svg
                                style='margin-left: 5px;'
                                stroke='currentColor'
                                fill='currentColor'
                                stroke-width='0'
                                viewBox='0 0 24 24'
                                height='1em'
                                width='1em'
                            >
                                <>
                                    <path d='m13 3 3.293 3.293-7 7 1.414 1.414 7-7L21 11V3z' />
                                    <path d='M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z' />
                                </>
                            </svg>
                        </Link>
                    )
                }
                {
                    sourceCode && isOpenSource && (
                        <Link
                            href={sourceCode}
                            target={'_blank'}
                            rel={'noopener noreferrer'}
                            button
                            color='blue'
                        >
                            {buttonLabel[2]}
                            <svg
                                style='margin-left: 5px;'
                                stroke='currentColor'
                                fill='currentColor'
                                stroke-width='0'
                                viewBox='0 0 24 24'
                                height='1em'
                                width='1em'
                            >
                                <path
                                    d='m7.375 16.781 1.25-1.562L4.601 12l4.024-3.219-1.25-1.562-5 4a1 1 0 0 0 0 1.562l5 4zm9.25-9.562-1.25 1.562L19.399 12l-4.024 3.219 1.25 1.562 5-4a1 1 0 0 0 0-1.562l-5-4zm-1.649-4.003-4 18-1.953-.434 4-18z'
                                    stroke='none'
                                />
                            </svg>
                        </Link>
                    )
                }
            </div>
        </div>
        <img src={image} alt={title + ' image'} class='project-image' />
    </div>
</article>

<style>
    article {
        display: flex;
        position: relative;
    }

    article:nth-child(even) .card {
        flex-direction: row-reverse;

        @media (max-width: 980px) {
            flex-direction: column;
        }
    }

    .card {
        display: flex;
        align-items: center;
        gap: 1rem;
        background-color: var(--bg-transparent);
        padding: 1rem 1.5rem;
        border-radius: 10px;

        &:nth-child(even) {
            flex-direction: row-reverse;
        }

        @media (max-width: 980px) {
            padding: 2rem 1rem;
            flex-direction: column;
            gap: 1rem;
            margin: 0 -5%;
            border-radius: 0;
        }
    }

    .project-year {
        position: absolute;
        top: 30px;
        left: -35px;
        color: var(--text);
        transform: rotate(270deg);
        font-size: 1rem;

        @media (max-width: 980px) {
            transform: rotate(0);
            top: -20px;
            left: unset;
            right: -10px;
        }
    }

    .title {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin: 2rem 0 1rem 0;

        @media (max-width: 980px) {
            margin: 1rem 0;
        }
    }

    .title h2 {
        color: var(--site-color-600);
        font-size: 25px;
        text-wrap: balance;
    }

    .open-source {
        font-size: 12px;
        font-weight: 500;
        color: var(--color-cyan);
        border: 1px solid var(--color-cyan);
        padding: 2px 12px;
        border-radius: 4px;
    }

    .tags {
        margin-block: 2rem;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 1rem;
    }

    .tags img {
        width: 30px;
        height: 30px;
    }

    .buttons{
        display: flex;
        gap: 1rem;
        justify-content: space-between;
    }

    .project-image {
        filter: drop-shadow(0 0 3rem rgba(0, 208, 255, 0.35));
        align-self: center;
        flex: 1;
        width: 500px;
        max-width: 100%;
        padding: 25px;

        @media (max-width: 980px) {
            max-width: 100%;
            align-self: flex-start;
            width: 500px;
        }
    }
</style>
