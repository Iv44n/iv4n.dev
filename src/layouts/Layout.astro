---
import ViewTransitions from 'astro/components/ViewTransitions.astro'
import '@fontsource-variable/fira-code'
import Header from '@components/Header.astro'
import Footer from '@components/Footer.astro'
import { getLangFromUrl } from '@/i18n/utils'
interface Props {
    title: string;
    description: string;
}

const { title, description } = Astro.props

---

<!doctype html>
<html lang={getLangFromUrl(Astro.url)}>
    <head>
        <meta charset='UTF-8' />
        <meta name='viewport' content='width=device-width, initial-scale=1.0'/>
        <meta name='description' content={description} />
        <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
        <title>Ivan - {title}</title>

        <ViewTransitions />
    </head>
    <body class='dark-mode'>
        <Header />
        <main class='width-padding'>
            <slot />
        </main>
        <Footer />
    </body>
</html>

<style is:global>
    :root {
        --site-color-50: #e8f2ff;
        --site-color-100: #d5eeff;
        --site-color-200: #b3deff;
        --site-color-300: #85c5ff;
        --site-color-400: #569dff;
        --site-color-500: #2f76ff;
        --site-color-600: #0040ff;
        --site-color-700: #003cff;
        --site-color-800: #0638cd;
        --site-color-900: #10379f;
        --site-color-950: #0a1e5c;

        --color-orange: #F97300;
        --color-cyan: #0ee9b6;
    }

    /* Themes */
    .dark-mode {
        /* Dark Mode Theme */
        --bg: #00000a;
        --bg-gradient: linear-gradient(to bottom, #02030f, var(--bg));
        --bg-transparent: rgba(255, 255, 255, 0.051);
        --border-color-base: rgba(219, 228, 255, 0.15);
        --text: #9ca0ae;
        --text-muted: var(--site-color-100);
    }

    .light-mode {
        /* Light Mode Theme */
        --bg: #fafcff;
        --bg-gradient: linear-gradient(to bottom, #d6e0f1, var(--bg));
        --bg-transparent: #0000000d;
        --border-color-base: rgba(0, 0, 0, 0.3);
        --text: #363643;
        --text-muted: #00000a;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Fira Code Variable', sans-serif;
    }

    html {
        scroll-behavior: smooth;
    }

    body {
        width: 100%;
        min-height: 100dvh;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        position: relative;
        background-image: var(--bg-gradient);
        color: var(--text);
    }

    main {
        width: 100%;

        @media (max-width: 970px) {
            margin: 8rem 0 3rem;
        }
    }

    a {
        text-decoration: none;
        color: var(--text);
        transition: color 0.3s ease;

        &:hover {
            color: var(--site-color-600);
        }
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        color: var(--text-muted);
    }

    h1 {
        font-size: 34px;
    }

    h2 {
        font-size: 24px;
        font-weight: 700;
    }

    h3, h4 {
        font-size: 18px;
        font-weight: 600;
    }

    li {
        list-style: none;
    }

    textarea {
        resize: none;
    }

    select {
        background: transparent;
        border: none;
        color: var(--text);
        width: fit-content;
        max-width: 88px;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 14px;
    }

    option {
        background: var(--bg);
        font-size: 14px;
    }

    .blue-text {
        color: var(--site-color-600);
    }

    .width-padding {
        padding: 0 13%;

        @media (max-width: 1400px) {
            padding: 0 11%;
        }

        @media (max-width: 1205px) {
            padding: 0 6%;
        }

        @media (max-width: 1050px) {
            padding: 0 3%;
        }

        @media (max-width: 970px) {
            padding: 0 5%;
        }
    }

    .text-swipe-animation,
    .text-swipe-animation::after {
        animation-delay: 0.15s;
        animation-duration: 0.65s;
        animation-fill-mode: backwards;
    }

    .text-swipe-animation {
        width: fit-content;
        position: relative;
        animation: clip-text 0.65s ease-in forwards;
    }

    .text-swipe-animation::after {
        content: '';
        position: absolute;
        inset: 0;
        pointer-events: none;
        background-color: var(--site-color-600);
        transform: scaleX(0);
        transform-origin: 0 50%;
        animation-name: text-swiper;
    }

    @keyframes clip-text {
        from {
            clip-path: inset(0 100% 0 0);
        }
        to {
            clip-path: inset(0 0 0 0);
        }
    }

    @keyframes text-swiper {
        0%,
        50% {
            transform-origin: 0 50%;
        }
        60%,
        100% {
            transform-origin: 100% 50%;
        }
        60% {
            transform: scaleX(1);
        }
        100% {
            transform: scaleX(0);
        }
    }
</style>
